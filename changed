import tkinter as tk
from tkinter import messagebox
import webbrowser
import os 
import shutil
from tkinter import filedialog

def orgnized(path):
    if path!='':
        os.chdir(path=path)

        extensions = {
            ".aif": "mp3",
            ".cda": "mp3",
            ".mid": "mp3",
            ".midi": "mp3",
            ".mpa": "mp3",
            ".ogg": "mp3",
            ".wav": "mp3",
            ".wma": "mp3",
            ".wpl": "mp3",
            ".7z": "compressed",
            ".arj": "compressed",
            ".deb": "compressed",
            ".pkg": "compressed",
            ".rar": "compressed",
            ".rpm": "compressed",
            ".tar.gz": "compressed",
            ".z": "compressed",
            ".zip": "compressed",
            ".bin": "disc&media",
            ".dmg": "disc&media",
            ".iso": "disc&media",
            ".toast": "disc&media",
            ".vcd": "disc&media",
            ".csv": "data&database",
            ".dat": "data&database",
            ".db": "data&database",
            ".dbf": "data&database",
            ".log": "data&database",
            ".mdb": "data&database",
            ".sav": "data&database",
            ".sql": "data&database",
            ".tar": "data&database",
            ".xml": "data&database",
            ".email": "e-mail",
            ".eml": "e-mail",
            ".emlx": "e-mail",
            ".msg": "e-mail",
            ".oft": "e-mail",
            ".ost": "e-mail",
            ".pst": "e-mail",
            ".vcf": "e-mail",
            ".apk": "executablefiles",
            ".bat": "executablefiles",
            ".bin": "executablefiles",
            ".cgi": "executablefiles",
            ".pi": "executablefiles",
            ".com": "executablefiles",
            ".exe": "executablefiles",
            ".gadget": "executablefiles",
            ".jar": "executablefiles",
            ".msi": "executablefiles",
            ".wsf": "executablefiles",
            ".fnt": "fontfile",
            ".fon": "fontfile",
            ".otf": "fontfile",
            ".ttf": "fontfile",
            ".ai": "Images",
            ".bmp": "Images",
            ".gif": "Images",
            ".ico": "Images",
            ".jpeg": "Images",
            ".jpg": "Images",
            ".png": "Images",
            ".ps": "Images",
            ".psd": "Images",
            ".svg": "Images",
            ".tif": "Images",
            ".tiff": "Images",
            ".webp": "Images",
            ".asp": "internet&programming",
            ".aspx": "internet&programming",
            ".c": "internet&programming",
            ".cpp": "internet&programming",
            ".cfm": "internet&programming",
            ".cgi": "internet&programming",
            ".pl": "internet&programming",
            ".class": "internet&programming",
            ".css": "internet&programming",
            ".h": "internet&programming",
            ".htm": "internet&programming",
            ".html": "internet&programming",
            ".java": "internet&programming",
            ".js": "internet&programming",
            ".jsp": "internet&programming",
            ".part": "internet&programming",
            ".php": "internet&programming",
            ".py": "internet&programming",
            ".rss": "internet&programming",
            ".sh": "internet&programming",
            ".swift": "internet&programming",
            ".vb": "internet&programming",
            ".xhtml": "internet&programming",
            ".key": "presentation",
            ".odp": "presentation",
            ".pps": "presentation",
            ".ppt": "presentation",
            ".pptx": "presentation",
            ".ods": "sheet",
            ".xls": "sheet",
            ".xlsm": "sheet",
            ".xlsx": "sheet",
            ".bak": "system",
            ".cab": "system",
            ".cfg": "system",
            ".cpl": "system",
            ".cur": "system",
            ".dll": "system",
            ".dmp": "system",
            ".drv": "system",
            ".icns": "system",
            ".ico": "system",
            ".ini": "system",
            ".lnk": "system",
            ".msi": "system",
            ".sys": "system",
            ".tmp": "system",
            ".3g2": "Videos",
            ".3gp": "Videos",
            ".avi": "Videos",
            ".flv": "Videos",
            ".h264": "Videos",
            ".m4v": "Videos",
            ".mkv": "Videos",
            ".mov": "Videos",
            ".mp4": "Videos",
            ".mpg": "Videos",
            ".mpeg": "Videos",
            ".rm": "Videos",
            ".swf": "Videos",
            ".vob": "Videos",
            ".webm": "Videos",
            ".wmv": "Videos",
            ".doc": "Documents",
            ".docx": "Documents",
            ".pdf": "Documents",
            ".rtf": "Documents",
            ".tex": "Documents",
            ".txt": "Documents",
            ".wpd": "Documents",
            ".dmg": "system",
            ".app": "system",
            ".pages": "Documents",
            ".numbers": "sheet",
        }

        def createorgetfolder(name):

            if name != None:
                if os.path.exists(name):
                    print('is already present')
                else:
                    os.makedirs(name)
                    print('file craeted')
            else:
                print('something went wrrong')

        files = os.listdir()

        for file in files:
            
            if os.path.isfile(file):
                filename,fileextension = os.path.splitext(file)
                
                foldername  = extensions.get(fileextension)
                if foldername != None:
                    createorgetfolder(foldername)  
                
                    shutil.move(file,foldername)

                else:
                    foldername = 'others'
                    createorgetfolder(foldername)
                    shutil.move(file,foldername)
                    

                
            else:
                print('no files is exists')
            
        
        messagebox.showinfo("Message", "your folder was organized")
    else:
        messagebox.showinfo("Message", "No folder is selected")

def callback(url):
    webbrowser.open_new(url)

def get_folder_path():
    folder_path = filedialog.askdirectory()
    print("Selected folder path:", folder_path)
    orgnized(folder_path)


def main():
    root = tk.Tk()
    root.title("FileCategorizer")
    root.geometry("500x200")
    text = tk.Label(root,text="Welcome to FileCategorizer by John francis",font=('Helvetica',18,'bold'),foreground='red')
    text.pack(pady=5)
    text = tk.Label(root,text="Choose a folder to organize")
    text.pack(pady=10)
    button = tk.Button(root, text="Select Folder", command=lambda:[get_folder_path()])
    button.pack(pady=10)

    
    feedback = tk.Label(root,text="If you have faced any bug, report it here.",foreground='blue',cursor="hand")
    feedback.pack(side=tk.BOTTOM,pady=3)
    feedback.bind("<Button-1>",lambda e:callback("https://www.instagram.com/francis.exe/"))
    

    root.mainloop()

if __name__ == "__main__":
    main()
